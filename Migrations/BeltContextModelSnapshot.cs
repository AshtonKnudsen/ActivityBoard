// <auto-generated />
using System;
using CBelt.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CBelt.Migrations
{
    [DbContext(typeof(BeltContext))]
    partial class BeltContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CBelt.Models.Activity", b =>
                {
                    b.Property<int>("activityid")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("date");

                    b.Property<string>("description")
                        .IsRequired();

                    b.Property<int>("duration");

                    b.Property<int>("myuseruserid");

                    b.Property<TimeSpan>("time");

                    b.Property<string>("title")
                        .IsRequired();

                    b.HasKey("activityid");

                    b.HasIndex("myuseruserid");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("CBelt.Models.RSVP", b =>
                {
                    b.Property<int>("rsvpid")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("activityid");

                    b.Property<int>("userid");

                    b.HasKey("rsvpid");

                    b.HasIndex("activityid");

                    b.HasIndex("userid");

                    b.ToTable("RSVPs");
                });

            modelBuilder.Entity("CBelt.Models.User", b =>
                {
                    b.Property<int>("userid")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<string>("email")
                        .IsRequired();

                    b.Property<string>("firstname")
                        .IsRequired();

                    b.Property<string>("lastname")
                        .IsRequired();

                    b.Property<string>("password")
                        .IsRequired();

                    b.HasKey("userid");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CBelt.Models.Activity", b =>
                {
                    b.HasOne("CBelt.Models.User", "myuser")
                        .WithMany()
                        .HasForeignKey("myuseruserid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CBelt.Models.RSVP", b =>
                {
                    b.HasOne("CBelt.Models.Activity", "activity")
                        .WithMany("RSVPS")
                        .HasForeignKey("activityid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CBelt.Models.User", "user")
                        .WithMany("RSVPS")
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
